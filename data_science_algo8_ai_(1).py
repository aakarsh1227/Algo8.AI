# -*- coding: utf-8 -*-
"""Data_Science_Algo8_AI (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U6pquGzcVsZM64WqnayxVbNpprsp3fvr

##Import libraries
"""

import pandas as pd
import os
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import IsolationForest

"""#  Mount Google Drive with  remount"""

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

""" # Changed working directory to Colab Notebooks in Google Drive"""

os.chdir('drive/My Drive/Colab Notebooks')

"""# Reading the Data"""

df = pd.read_excel(pd.ExcelFile('data (5) (1) (1) (1) (1) (1).xlsx'),sheet_name="internship-data-1")
df.head(5)

"""# List of sensor columns
# Converted selected columns to numeric
"""

sensor_columns = ["Cyclone_Inlet_Gas_Temp", "Cyclone_Material_Temp", "Cyclone_Outlet_Gas_draft",
                  "Cyclone_cone_draft", "Cyclone_Gas_Outlet_Temp", "Cyclone_Inlet_Draft"]
df[sensor_columns] = df[sensor_columns].apply(pd.to_numeric, errors='coerce')

"""# Forward fill missing values in the DataFrame"""

df.fillna(method='ffill', inplace=True)

""" # Converted 'time' column to datetime format"""

df['time'] = pd.to_datetime(df['time'])
df.set_index('time', inplace=True)

"""# Set the figure size"""

plt.figure(figsize=(12, 6))
sns.lineplot(data=df, x=df.index, y="Cyclone_Inlet_Gas_Temp", label='Inlet Gas Temp')
sns.lineplot(data=df, x=df.index, y="Cyclone_Gas_Outlet_Temp", label='Outlet Gas Temp')
plt.legend()
plt.title("Cyclone Gas Temperature Trends")
plt.show()

"""# Initialize Isolation Forest for anomaly detection"""

iso_forest = IsolationForest(n_estimators=100, contamination=0.01, random_state=42)
df['anomaly'] = iso_forest.fit_predict(df[sensor_columns])

"""# Extract anomaly rows and print count

"""

df_anomalies = df[df['anomaly'] == -1]
print(f"Detected {len(df_anomalies)} anomalies.")

""" # Plot inlet gas temperature with anomalies highlighted  """

plt.figure(figsize=(12, 6))
plt.plot(df.index, df["Cyclone_Inlet_Gas_Temp"], label='Inlet Gas Temp')
plt.scatter(df_anomalies.index, df_anomalies["Cyclone_Inlet_Gas_Temp"], color='red', label='Anomalies')
plt.legend()
plt.title("Detected Anomalies in Cyclone Inlet Gas Temperature")
plt.show()

""" # Save detected anomalies to a CSV file  l"""

df_anomalies.to_csv("detected_anomalies.csv", index=True)
print("Anomalies saved to detected_anomalies.csv")

